<?xml version="1.0" encoding="UTF-8"?>
<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
	<vendor>tuni.fi</vendor>
	<name>headsail</name>
	<version>1.0</version>
	<description></description>
	<cpu>
		<name>other</name>
		<revision>r1p0</revision>
		<endian>little</endian>
		<mpuPresent>false</mpuPresent>
		<fpuPresent>false</fpuPresent>
		<nvicPrioBits>2</nvicPrioBits>
		<vendorSystickConfig>true</vendorSystickConfig>
	</cpu>
	<addressUnitBits>8</addressUnitBits>
	<width>32</width>
	<size>32</size>
	<peripherals>
		<peripheral>
			<name>C2C_config</name>
			<version>1.0</version>
			<baseAddress>0xFFB00000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0040</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>Configuration_Registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>ID</name>
						<description>ID register. Constant ID value</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x1234ABCD</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ID</name>
								<description>ID register. Constant ID value</description>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>INFO</name>
						<description>Version number - AXI Address width - AXI Data width-Reserved</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x20002000</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>version</name>
								<description>Version number</description>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>axi_addr_width</name>
								<description>AXI Address Width</description>
								<bitRange>[15:8]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>axi_data_width</name>
								<description>AXI Data Width</description>
								<bitRange>[23:16]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS</name>
						<description>Holds status flags. Each Status Flag can either be cleared by writing to the STATUS_CLR register or when the STATUS register is read (must be configured)</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>wr_complete</name>
								<description>Status flag for write transfer completion</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>rd_complete</name>
								<description>Status flag for read transfer completion</description>
								<bitRange>[1:1]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>wr_error</name>
								<description>Status flag for write transfer error</description>
								<bitRange>[2:2]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>rd_error</name>
								<description>Status flag for read transfer error</description>
								<bitRange>[3:3]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS_CLR</name>
						<description>Acknowledging status register. Clearing each respective one by setting corresponding bit</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_complete</name>
								<description>Acknowledging wr_complete status bit. Clearing wr_complete status flag by setting '1'</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>rd_complete</name>
								<description>Acknowledging rd_complete status bit. Clearing rd_complete status flag by setting '1'</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>wr_error</name>
								<description>Acknowledging wr_error status bit. Clearing wr_error status flag by setting '1'</description>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>rd_error</name>
								<description>Acknowledging rd_error status bit. Clearing rd_error status flag by setting '1'</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_EN</name>
						<description>Configuring which of the interrupts are routed to the IRQ pin. Enabling each intterupt signal by setting corresponding bit. All of the interrupts can be enabled and disabled independent from each other.</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_complete</name>
								<description>Configuring wr_complete interrupt is routed to the IRQ pin by setting '1' </description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>rd_complete</name>
								<description>Configuring rd_complete interrupt is routed to the IRQ pin by setting '1' </description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>wr_error</name>
								<description>Configuring wr_error interrupt is routed to the IRQ pin by setting '1' </description>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>rd_error</name>
								<description>Configuring rd_error interrupt is routed to the IRQ pin by setting '1' </description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_CONFIG</name>
						<description>Configures the state (active high/low) and clearing
conditions for the IRQ pin. 
Clear: '0' = Use STATUS_CLR to clear 
                  '1' = Auto Clear on Read of STATUS register
Polarity: '0' = IRQ active low
                   '1' = IRQ active high</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Clear</name>
								<description>Clear: '0' = Use STATUS_CLR to clear 
                  '1' = Auto Clear on Read of STATUS register</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>Polarity</name>
								<description>Polarity: '0' = IRQ active low
                   '1' = IRQ active high</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>ADDRESS_MAPPING_TX</name>
						<description>Address Mapping for AXI4 slave interface. It provides a subset of the bits that will be used as a map value</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ADDRESS_MAPPING_TX</name>
								<description>Address Mapping for AXI4 slave interface. It provides a subset of the bits that will be used as a map value</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_C2C_CONFIG_2</name>
						<description>PAD configuration Register 2. It is used to perform proper configuration for the corresponding pads of the I/O ports
10 bits per PAD configuration
0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pad_PHY_DATA_ACK_RX_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[9:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>pad_PHY_DATA_VALID_RX_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[19:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>pad_PHY_DATA_RX_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[29:20]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_C2C_CONFIG_1</name>
						<description>PAD configuration Register 1. It is used to perform proper configuration for the corresponding pads of the I/O ports
10 bits per PAD configuration
0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pad_PHY_DATA_ACK_TX_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[9:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>pad_PHY_DATA_VALID_TX_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[19:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>pad_PHY_DATA_TX_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[29:20]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>ADDRESS_MASKING_RX</name>
						<description>Address Masking for AXI4 master interface. It specifies a bitmask. 
address_masking (i) =  1  :  address_out(i) &lt;=address_in(i) 
address_masking (i) =  0  :  address_out(i) &lt;= address_mapping(i)
E.g.    address_in = 0x70007000
          address_masking= 0x0000FFFF 
          address_mapping = 0xABCD0000
          address_out = 0xABCD7000</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ADDRESS_MASKING_RX</name>
								<description>Address Masking for AXI4 master interface. It specifies a bitmask. 
address_masking (i) =  1  :  address_out(i) &lt;=address_in(i) 
address_masking (i) =  0  :  address_out(i) &lt;= address_mapping(i)
E.g.    address_in = 0x70007000
          address_masking= 0x0000FFFF 
          address_mapping = 0xABCD0000
          address_out = 0xABCD7000</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>ADDRESS_MAPPING_RX</name>
						<description>Address Mapping for AXI4 master interface. It provides a subset of the bits that will be used as a map value</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ADDRESS_MAPPING_RX</name>
								<description>Address Mapping for AXI4 master interface. It provides a subset of the bits that will be used as a map value</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>ADDRESS_MASKING_TX</name>
						<description>Address Masking for AXI4 slave interface. It specifies a bitmask. 
address_masking (i) =  1  :  address_out(i) &lt;=address_in(i) 
address_masking (i) =  0  :  address_out(i) &lt;= address_mapping(i)
E.g.    address_in = 0x70007000
          address_masking= 0x0000FFFF 
          address_mapping = 0xABCD0000
          address_out = 0xABCD7000</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ADDRESS_MASKING_TX</name>
								<description>Address Masking for AXI4 slave interface. It specifies a bitmask. 
address_masking (i) =  1  :  address_out(i) &lt;=address_in(i) 
address_masking (i) =  0  :  address_out(i) &lt;= address_mapping(i)
E.g.    address_in = 0x70007000
          address_masking= 0x0000FFFF 
          address_mapping = 0xABCD0000
          address_out = 0xABCD7000</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>C2C_parallel</name>
			<version>1.0</version>
			<baseAddress>0x70080000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x10000000</size>
				<usage>reserved</usage>
			</addressBlock>
			<registers/>
		</peripheral>
		<peripheral>
			<name>C2C_serial_config</name>
			<version>1.0</version>
			<baseAddress>0xFFC00000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x005C</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>Configuration_Registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>ID</name>
						<description>ID register. Constant ID value</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0xABCD9876</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ID</name>
								<description>ID register. Constant ID value</description>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>INFO</name>
						<description>Version number - AXI Address width - AXI Data width-Reserved</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x20002000</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>version</name>
								<description>Version number</description>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>axi_addr_width</name>
								<description>AXI Address Width</description>
								<bitRange>[15:8]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>axi_data_width</name>
								<description>AXI Data Width</description>
								<bitRange>[23:16]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS1</name>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS0</name>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>STATUS0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TEST_DIAGNOSIS1_CONFIG</name>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TEST_DIAGNOSIS1_CONFIG</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TEST_DIAGNOSIS0_CONFIG</name>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TEST_DIAGNOSIS0_CONFIG</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>LANE1_CONFIG</name>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LANE1_CONFIG</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>LANE0_CONFIG</name>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LANE0_CONFIG</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD2_CONFIG</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pad_ser_DATA_TX_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[9:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>pad_ser_DATA_RX_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[19:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>pad_ser_CLK_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[29:20]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD1_CONFIG</name>
						<description>PAD configuration Register 1. It is used to perform proper configuration for the corresponding pads of the I/O ports
10 bits per PAD configuration
0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pad_ser_DATA_TX_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[9:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>pad_ser_DATA_RX_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[19:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>pad_ser_CLK_config</name>
								<description>0: drive strenght / 1: drive strenght / 2: schmitt trigger / 3: schmitt trigger  / 4: rate / 5: output en(0) / 6: hold  / 7: pull enable  / 8: pd(0)/pu(1) / 9: input en(1)</description>
								<bitRange>[29:20]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>ADDRESS_MASKING_RX</name>
						<description>Address Masking for AXI4 master interface. It specifies a bitmask. 
address_masking (i) =  1  :  address_out(i) &lt;=address_in(i) 
address_masking (i) =  0  :  address_out(i) &lt;= address_mapping(i)
E.g.    address_in = 0x70007000
          address_masking= 0x0000FFFF 
          address_mapping = 0xABCD0000
          address_out = 0xABCD7000</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ADDRESS_MASKING_RX</name>
								<description>Address Masking for AXI4 master interface. It specifies a bitmask. 
address_masking (i) =  1  :  address_out(i) &lt;=address_in(i) 
address_masking (i) =  0  :  address_out(i) &lt;= address_mapping(i)
E.g.    address_in = 0x70007000
          address_masking= 0x0000FFFF 
          address_mapping = 0xABCD0000
          address_out = 0xABCD7000</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>ADDRESS_MAPPING_RX</name>
						<description>Address Mapping for AXI4 master interface. It provides a subset of the bits that will be used as a map value</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ADDRESS_MAPPING_RX</name>
								<description>Address Mapping for AXI4 master interface. It provides a subset of the bits that will be used as a map value</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>ADDRESS_MASKING_TX</name>
						<description>Address Masking for AXI4 slave interface. It specifies a bitmask. 
address_masking (i) =  1  :  address_out(i) &lt;=address_in(i) 
address_masking (i) =  0  :  address_out(i) &lt;= address_mapping(i)
E.g.    address_in = 0x70007000
          address_masking= 0x0000FFFF 
          address_mapping = 0xABCD0000
          address_out = 0xABCD7000</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ADDRESS_MASKING_TX</name>
								<description>Address Masking for AXI4 slave interface. It specifies a bitmask. 
address_masking (i) =  1  :  address_out(i) &lt;=address_in(i) 
address_masking (i) =  0  :  address_out(i) &lt;= address_mapping(i)
E.g.    address_in = 0x70007000
          address_masking= 0x0000FFFF 
          address_mapping = 0xABCD0000
          address_out = 0xABCD7000</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>ADDRESS_MAPPING_TX</name>
						<description>Address Mapping for AXI4 slave interface. It provides a subset of the bits that will be used as a map value</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ADDRESS_MAPPING_TX</name>
								<description>Address Mapping for AXI4 slave interface. It provides a subset of the bits that will be used as a map value</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_CONFIG</name>
						<description>Configures the state (active high/low) and clearing
conditions for the IRQ pin. 
Clear: '0' = Use STATUS_CLR to clear 
                  '1' = Auto Clear on Read of STATUS register
Polarity: '0' = IRQ active low
                   '1' = IRQ active high</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Clear</name>
								<description>Clear: '0' = Use STATUS_CLR to clear 
                  '1' = Auto Clear on Read of STATUS register</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>Polarity</name>
								<description>Polarity: '0' = IRQ active low
                   '1' = IRQ active high</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_EN</name>
						<description>Configuring which of the interrupts are routed to the IRQ pin. Enabling each intterupt signal by setting corresponding bit. All of the interrupts can be enabled and disabled independent from each other.</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_complete</name>
								<description>Configuring wr_complete interrupt is routed to the IRQ pin by setting '1' </description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>rd_complete</name>
								<description>Configuring rd_complete interrupt is routed to the IRQ pin by setting '1' </description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>wr_error_0</name>
								<description>Configuring wr_error interrupt is routed to the IRQ pin by setting '1' </description>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>rd_error</name>
								<description>Configuring rd_error interrupt is routed to the IRQ pin by setting '1' </description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS_CLR</name>
						<description>Acknowledging status register. Clearing each respective one by setting corresponding bit</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_complete</name>
								<description>Acknowledging wr_complete status bit. Clearing wr_complete status flag by setting '1'</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>rd_complete</name>
								<description>Acknowledging rd_complete status bit. Clearing rd_complete status flag by setting '1'</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>wr_error_0</name>
								<description>Acknowledging wr_error status bit. Clearing wr_error status flag by setting '1'</description>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>rd_error</name>
								<description>Acknowledging rd_error status bit. Clearing rd_error status flag by setting '1'</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS</name>
						<description>Holds status flags. Each Status Flag can either be cleared by writing to the STATUS_CLR register or when the STATUS register is read (must be configured)</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>wr_complete</name>
								<description>Status flag for write transfer completion</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>rd_complete</name>
								<description>Status flag for read transfer completion</description>
								<bitRange>[1:1]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>wr_error</name>
								<description>Status flag for write transfer error</description>
								<bitRange>[2:2]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>rd_error</name>
								<description>Status flag for read transfer error</description>
								<bitRange>[3:3]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>C2C_serial</name>
			<version>1.0</version>
			<baseAddress>0x80080000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x10000000</size>
				<usage>reserved</usage>
			</addressBlock>
			<registers/>
		</peripheral>
		<peripheral>
			<name>confReg</name>
			<version>1.0</version>
			<baseAddress>0xFF600000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0044</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>padCfg</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>PAD_RGMII_1_RX_CLK</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0224</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>RGMII_SEL</name>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RGMII_SEL</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>SEL_TSN_IP</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SEL_ETH_IP</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_MDIO_2_MDIO</name>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0015</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_1_RX_DATA</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0224</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_2_TX_CTL</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0011</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_2_RX_DATA</name>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0224</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_2_RX_CLK</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0224</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_2_RX_CTL</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0224</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_1_TX_CTL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0011</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_1_TX_CLK</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0011</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_1_TX_DATA</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0011</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_2_TX_CLK</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0011</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_MDIO_1_MDC</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0011</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_MDIO_1_MDIO</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0015</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-only</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_2_TX_DATA</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0011</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_MDIO_2_MDC</name>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0011</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_RGMII_1_RX_CTL</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0224</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DS0</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>DS1</name>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST0</name>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>ST1</name>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>RATE_CONTROL</name>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>OUTPUT_EN</name>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_output</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_output</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>HOLD</name>
								<bitRange>[6:6]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>disable_pad</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>enable_pad</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_ENABLE</name>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_pull</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_pull</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>PULL_DIR</name>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>pull_up</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>pull_down</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>INPUT_EN</name>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>enable_input</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>disable_input</name>
										<value>0</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>mdio_map0</name>
			<version>1.6</version>
			<baseAddress>0xFF600200</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x001C</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>mdio</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>MDIO_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_CTRL</name>
								<bitRange>[2:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_WR_DATA</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_WR_DATA</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x000A</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_DIV</name>
								<bitRange>[7:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_ADDR_PHY</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_ADDR_PHY</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_ADDR_ON_PHY</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_ADDR_ON_PHY</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_STATUS</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>MDIO_STATUS</name>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_RD_DATA</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>MDIO_RD_DATA</name>
								<bitRange>[15:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>mdio_map1</name>
			<version>1.6</version>
			<baseAddress>0xFF600400</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x001C</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>mdio</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>MDIO_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_CTRL</name>
								<bitRange>[2:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_WR_DATA</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_WR_DATA</name>
								<bitRange>[15:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x000A</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_DIV</name>
								<bitRange>[7:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_ADDR_PHY</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_ADDR_PHY</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_ADDR_ON_PHY</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>MDIO_ADDR_ON_PHY</name>
								<bitRange>[4:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_STATUS</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>MDIO_STATUS</name>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>MDIO_RD_DATA</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>MDIO_RD_DATA</name>
								<bitRange>[15:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>i2c</name>
			<version>1.0</version>
			<baseAddress>0xFFF05000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0018</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>CLK_PRESCALER</name>
						<description>Clock Prescale Register</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PRE</name>
								<description>Sets the clock prescaler by the value in PRE to achieve the desired I2C clock by dividing</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RX</name>
						<description>Receive Register</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RX</name>
								<description>Receive Register</description>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CTRL</name>
						<description>Control Register</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>IE</name>
								<description>Enable interrupts</description>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>EN</name>
								<description>Enable the I2C peripheral.</description>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CMD</name>
						<description>Command Register</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>IA</name>
								<description> Interrupt Acknowldge.
Set to one to acknowledge interrupt. Cleared when transmission is done or arbitration
is lost.
</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>ACK</name>
								<description>Acknowledge received data</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>WR</name>
								<description>Write to bus</description>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>RD</name>
								<description>Read from bus.</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>STO</name>
								<description>Send stop bit</description>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>STA</name>
								<description>Send start bit</description>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS</name>
						<description>Status Register</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>IRQ</name>
								<description>Interrupt received.
This flag is always set when transmission has finished or bus arpitration was lostm,
regardless of whether interrupts are enabled or not. This flag can possibly polled and
is cleared by writing 1 to the IA command register.
</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>TIP</name>
								<description>Transfer in progress</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>AL</name>
								<description>Arbitration lost.</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>BUS</name>
								<description>Bus is busy</description>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>RXA</name>
								<description> Acknowledge from sent data</description>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TX</name>
						<description>Transmit Register</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX</name>
								<description>Transmit Register</description>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>spi_master0</name>
			<version>1.0</version>
			<baseAddress>0xFFF02000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x002C</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>STATUS</name>
						<description>Status Register</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RD</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>WR</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>QRD</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>QWR</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>SRST</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>CS</name>
								<bitRange>[11:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLKDIV</name>
						<description>Clock Divider</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CLKDIV</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPICMD</name>
						<description>SPI Command</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SPICMD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIADR</name>
						<description>SPI Address</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SPIADR</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPILEN</name>
						<description>SPI Transfer Length</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMDLEN</name>
								<description>The number of bits of the SPI command that should be sent.</description>
								<bitRange>[5:0]</bitRange>
							</field>
							<field>
								<name>ADDRLEN</name>
								<description>The number of bits of the SPI address that should be sent.
</description>
								<bitRange>[13:8]</bitRange>
							</field>
							<field>
								<name>DATALEN</name>
								<description>The number of bits read or written. Note that first the SPI command and address are</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIDUM</name>
						<description>SPI Dummy Cycles</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DUMMYRD</name>
								<description>Dummy cycles (nothing being written or read) between sending the SPI command +
SPI address and reading the data.
</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>DUMMYWR</name>
								<description>Dummy cycles (nothing being written or read) between sending the SPI command +
SPI address and writing the data.
</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TXFIFO</name>
						<description>SPI Transmit FIFO</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>TX</name>
								<description>Write data into the FIFO.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RXFIFO</name>
						<description>SPI Receive FIFO</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RX</name>
								<description>Read data from the FIFO.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTCFG</name>
						<description>Interrupt Configuration</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>THTX</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>THRX</name>
								<bitRange>[11:8]</bitRange>
							</field>
							<field>
								<name>CNTTX</name>
								<bitRange>[19:16]</bitRange>
							</field>
							<field>
								<name>CNTRX</name>
								<bitRange>[27:24]</bitRange>
							</field>
							<field>
								<name>CNTEN</name>
								<bitRange>[30:30]</bitRange>
							</field>
							<field>
								<name>EN</name>
								<bitRange>[31:31]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTSTA</name>
						<description>This register isn't properly specified so we need to look at this</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>INTSTA</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>spi_master1</name>
			<version>1.0</version>
			<baseAddress>0xFFF03000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x002C</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>STATUS</name>
						<description>Status Register</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RD</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>WR</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>QRD</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>QWR</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>SRST</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>CS</name>
								<bitRange>[11:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLKDIV</name>
						<description>Clock Divider</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CLKDIV</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPICMD</name>
						<description>SPI Command</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SPICMD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIADR</name>
						<description>SPI Address</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SPIADR</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPILEN</name>
						<description>SPI Transfer Length</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMDLEN</name>
								<description>The number of bits of the SPI command that should be sent.</description>
								<bitRange>[5:0]</bitRange>
							</field>
							<field>
								<name>ADDRLEN</name>
								<description>The number of bits of the SPI address that should be sent.
</description>
								<bitRange>[13:8]</bitRange>
							</field>
							<field>
								<name>DATALEN</name>
								<description>The number of bits read or written. Note that first the SPI command and address are</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIDUM</name>
						<description>SPI Dummy Cycles</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DUMMYRD</name>
								<description>Dummy cycles (nothing being written or read) between sending the SPI command +
SPI address and reading the data.
</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>DUMMYWR</name>
								<description>Dummy cycles (nothing being written or read) between sending the SPI command +
SPI address and writing the data.
</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TXFIFO</name>
						<description>SPI Transmit FIFO</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>TX</name>
								<description>Write data into the FIFO.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RXFIFO</name>
						<description>SPI Receive FIFO</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RX</name>
								<description>Read data from the FIFO.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTCFG</name>
						<description>Interrupt Configuration</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>THTX</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>THRX</name>
								<bitRange>[11:8]</bitRange>
							</field>
							<field>
								<name>CNTTX</name>
								<bitRange>[19:16]</bitRange>
							</field>
							<field>
								<name>CNTRX</name>
								<bitRange>[27:24]</bitRange>
							</field>
							<field>
								<name>CNTEN</name>
								<bitRange>[30:30]</bitRange>
							</field>
							<field>
								<name>EN</name>
								<bitRange>[31:31]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTSTA</name>
						<description>This register isn't properly specified so we need to look at this</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>INTSTA</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>uart0</name>
			<version>1.0</version>
			<baseAddress>0xFFF00000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0008</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>IER_DLM</name>
						<description>IER interrupt enable, DLM divisor latch MSB</description>
						<addressOffset>0x0001</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>IER_DLM</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IIR_FCR</name>
						<description>IIR interrupt identification, FCR FIFO control</description>
						<addressOffset>0x0002</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>IIR_FCR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>LCR</name>
						<description>line control</description>
						<addressOffset>0x0003</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LCR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MCR</name>
						<description>modem control (not used)</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<fields>
							<field>
								<name>MCR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>LSR</name>
						<description>line status</description>
						<addressOffset>0x0005</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>LSR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MSR</name>
						<description>modem status (not used)</description>
						<addressOffset>0x0006</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<fields>
							<field>
								<name>MSR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SCR</name>
						<description>scratch (not used)</description>
						<addressOffset>0x0007</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<fields>
							<field>
								<name>SCR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RBR_THR_DLL</name>
						<description>RBR receiver buffer, THR transmitter holding, DLL divisor latch LSB</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RBR_THR_DLL</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>uart1</name>
			<version>1.0</version>
			<baseAddress>0xFFF01000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0008</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>IER_DLM</name>
						<description>IER interrupt enable, DLM divisor latch MSB</description>
						<addressOffset>0x0001</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>IER_DLM</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IIR_FCR</name>
						<description>IIR interrupt identification, FCR FIFO control</description>
						<addressOffset>0x0002</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>IIR_FCR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>LCR</name>
						<description>line control</description>
						<addressOffset>0x0003</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LCR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MCR</name>
						<description>modem control (not used)</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<fields>
							<field>
								<name>MCR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>LSR</name>
						<description>line status</description>
						<addressOffset>0x0005</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>LSR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MSR</name>
						<description>modem status (not used)</description>
						<addressOffset>0x0006</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<fields>
							<field>
								<name>MSR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SCR</name>
						<description>scratch (not used)</description>
						<addressOffset>0x0007</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<fields>
							<field>
								<name>SCR</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RBR_THR_DLL</name>
						<description>RBR receiver buffer, THR transmitter holding, DLL divisor latch LSB</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>8</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RBR_THR_DLL</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>sdram_cfg</name>
			<version>2.0</version>
			<baseAddress>0xFFD00000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0074</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>axi_lite_regs</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>ddr_refresh_ack</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ddr_refresh_ack</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ddr_init_done</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ddr_init_done</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>axi_enabled</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>axi_enabled</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_init</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x2710</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_init</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_arf</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x017C</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_arf</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_mrd</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0002</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_mrd</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_ras</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0003</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_ras</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_rc</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_rc</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_rcd</name>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0002</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_rcd</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_rfc</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_rfc</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_rp</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0002</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_rp</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_rrd</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_rrd</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_wr</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_wr</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>t_wtr</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0002</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>t_wtr</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_burst_len</name>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_burst_len</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_burst_cycles</name>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_burst_cycles</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_rd_lat</name>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0003</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_rd_lat</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_wr_lat</name>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_wr_lat</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_col_shift</name>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_col_shift</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_col_mask</name>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x03FF</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_col_mask</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_row_shift</name>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x000D</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_row_shift</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_row_mask</name>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x3FFF</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_row_mask</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_bank_shift</name>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x000B</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_bank_shift</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_bank_mask</name>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0003</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_bank_mask</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_offset</name>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_offset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_start_addr</name>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_start_addr</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>c_end_addr</name>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0xBFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>c_end_addr</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>d_wrseparation</name>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>d_wrseparation</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>d_wrlatcorr</name>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>d_wrlatcorr</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>SYSCTRL</name>
			<version>1.0</version>
			<baseAddress>0x00101000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x1000</offset>
				<size>0x2000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x4000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x5000</offset>
				<size>0x3000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x8000</offset>
				<size>0x2000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0xA000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0xE000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0xF000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0001F000</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x3000</offset>
				<size>0x00D0</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x30D0</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x30F0</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x3110</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x3130</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x3150</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x3170</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x31B0</offset>
				<size>0x0020</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x31D0</offset>
				<size>0x0008</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>GPIO</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>DIR</name>
						<description>GPIO direction configuration bitfield:
- bit[i]=1b0: Input mode for GPIO[i]
- bit[i]=1b1: Output mode for GPIO[i]
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DIR</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>EN</name>
						<description>GPIO clock enable config register.
Bit 31 - 0 GPIOEN (R/W) GPIO[31:0] clock enable configuration bitfield:
- bit[i]=1b0: disable clock for GPIO[i]
- bit[i]=1b1: enable clock for GPIO[i]
GPIOs are gathered by groups of 4. The clock gating of one group is done only if
all 4 GPIOs are disabled.
Clock must be enabled for a GPIO if its direction is configured in input mode.</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>GPIOEN</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IN</name>
						<description>GPIO Data IN register. Bit 31 - 0 DATA_IN (R) GPIO[31:0] input data read bitfield. DATA_IN[i] corresponds to input data of GPIO[i].</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>DATA_IN</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>OUT</name>
						<description>GPIO Data out register. Bit 31 - 0 DATA_OUT (R/W) GPIO[31:0] output data read bitfield. DATA_OUT[i] corresponds to output data set on GPIO[i].</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DATA_OUT</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_0_3</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_CFG_0</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_1</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_2</name>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_3</name>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_4_7</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_CFG_4</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_5</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_6</name>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_7</name>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_8_11</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_CFG_8</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_9</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_10</name>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_11</name>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_12_15</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_CFG_12</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_13</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_14</name>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>PAD_CFG_15</name>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>UDMA</name>
					<addressOffset>0x1000</addressOffset>
					<register>
						<name>CTRL_CFG_CG</name>
						<description>uDMA peripherals clock gate configuration

Bitfields Defines uDMA peripherals clock gate configuration for corresponding peripheral</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CG_UART</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>CG_SPIM</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>CG_I2C0</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>CG_I2C1</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>CG_SDIO</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>CG_I2S</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>CG_CAM</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>CG_FILTER</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CTRL_CFG_EVENT</name>
						<description>uDMA peripherals external event configuration
</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMP_EVT0</name>
								<description> Forward event with ID matching CMP_EVT0 to peripherals as
event0
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>CMP_EVT1</name>
								<description>Forward event with ID matching CMP_EVT1 to peripherals as
event1
</description>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>CMP_EVT2</name>
								<description>Forward event with ID matching CMP_EVT2 to peripherals as
event2</description>
								<bitRange>[23:16]</bitRange>
							</field>
							<field>
								<name>CMP_EVT3</name>
								<description>Forward event with ID matching CMP_EVT3 to peripherals as
event3</description>
								<bitRange>[31:24]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CTRL_CFG_RST</name>
						<description>uDMA peripherals reset trigger (unimplemented)
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CTRL_CFG_RST</name>
								<description>uDMA peripherals reset trigger
(unimplemented)
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_RX_SADDR</name>
						<description>uDMA RX UART buffer
base address configuration
register</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SADDR</name>
								<description> RX buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets RX buffer base address
</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_RX_SIZE</name>
						<description>uDMA RX UART buffer size configuration register</description>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SIZE</name>
								<description> RX buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.</description>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_RX_CFG</name>
						<description>uDMA RX UART stream
configuration register</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>RX channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>RX channel enable and start transfer bitfield:
-1'b0: disable
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>RX channel clear and stop transfer:
-1'b0: disable
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_TX_SADDR</name>
						<description>uDMA TX UART buffer
base address configuration
register.</description>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SADDR</name>
								<description>TX buffer base address bitfield:
- Read: returns value of the buffer pointer until transfer is finished. Else returns 0.
- Write: sets buffer base address
</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_TX_SIZE</name>
						<description>uDMA TX UART buffer
size configuration register</description>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SIZE</name>
								<description>TX buffer size bitfield in bytes. (128kBytes maximum)
- Read: returns remaining buffer size to transfer.
- Write: sets buffer size.
</description>
								<bitRange>[16:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_TX_CFG</name>
						<description>uDMA TX UART stream
configuration register.</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description> TX channel continuous mode bitfield:
-1'b0: disabled
-1'b1: enabled
At the end of the buffer transfer, the uDMA reloads the address / buffer size and starts a
new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>TX channel enable and start transfer bitfield:
-1'b0: disabled
-1'b1: enable and start the transfer
This signal is used also to queue a transfer if one is already ongoing.
</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>TX transfer pending in queue status flag:
-1'b0: no pending transfer in the queue
-1'b1: pending transfer in the queue
</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>RX channel clear and stop transfer:
-1'b0: disable
-1'b1: stop and clear the on-going transfer</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_ERROR</name>
						<description>uDMA UART Error status</description>
						<addressOffset>0x00A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RX_ERR_OVERFLOW</name>
								<description>RX overflow error status flag:
- 1'b0: no error
- 1'b1: RX overflow error occurred
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RX_ERR_PARITY</name>
								<description>RX parity error status flag:
- 1'b0: no error
- 1'b1: RX parity error occurred</description>
								<bitRange>[1:1]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_RX_SIZE</name>
						<description>RX SPI uDMA
transfer size of
buffer</description>
						<addressOffset>0x0104</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SIZE</name>
								<description>Buffer size in bytes. (1MBytes maximum)
- Read: buffer size left
- Write: set buffer size
</description>
								<bitRange>[19:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_DATA</name>
						<description>RX read data for polling or interrupt</description>
						<addressOffset>0x00B4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>BYTE</name>
								<bitRange>[7:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_RX_SADDR</name>
						<description>RX SPI uDMA
transfer address of
associated buffer</description>
						<addressOffset>0x0100</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address
</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_STATUS</name>
						<description>uDMA UART status register</description>
						<addressOffset>0x00A0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>TX_BUSY</name>
								<description>TX busy status flag:
- 1'b0: no TX transfer on-going
- 1'b1: TX transfer on-going</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>RX_BUSY</name>
								<description>RX busy status flag:
- 1'b0: no RX transfer on-going
- 1'b1: RX transfer on-going
</description>
								<bitRange>[1:1]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_IRQ_EN</name>
						<description>uDMA UART Read or Error interrupt enable register</description>
						<addressOffset>0x00AC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RX</name>
								<description>Rx interrupt in enable flag:
- 1'b0: RX IRQ disable
- 1'b1: RX IRQ enable
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ERROR</name>
								<description>Error interrupt in enable flag:
- 1'b0: Error IRQ disable
- 1'b1: Error IRQ enable
</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_VALID</name>
						<description>uDMA UART Read polling
data valid flag register</description>
						<addressOffset>0x00B0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>READY</name>
								<description>Used only in RX polling method to indicate data is ready for read:
- 1'b0: Data is not ready to read
- 1'b1: Data is ready to read</description>
								<bitRange>[0:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_CMD_SADDR</name>
						<description>CMD SPI uDMA
transfer address of
associated buffer</description>
						<addressOffset>0x0120</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMD_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_TX_SADDR</name>
						<description>TX SPI uDMA
transfer address of
associated buffer</description>
						<addressOffset>0x0110</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SADDR</name>
								<description>Configure pointer to memory buffer:
- Read: value of the pointer until transfer is over. Else returns 0
- Write: set Address Pointer to memory buffer start address</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_CMD_SIZE</name>
						<description>CMD SPI uDMA
transfer size of
buffer</description>
						<addressOffset>0x0124</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMD_SIZE</name>
								<description>Buffer size in bytes. (1MBytes maximum)
- Read: buffer size left
- Write: set buffer size
</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_TX_SIZE</name>
						<description>TX SPI uDMA
transfer size of
buffer</description>
						<addressOffset>0x0114</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TX_SIZE</name>
								<description>Buffer size in bytes. (1MBytes maximum)
- Read: buffer size left
- Write: set buffer size
</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_CMD_CFG</name>
						<description>CMD SPI uDMA
transfer configuration</description>
						<addressOffset>0x0128</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>UART_SETUP</name>
						<description>UDMA UART configuration register.</description>
						<addressOffset>0x00A4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PARITY_ENA</name>
								<description>Parity bit generation and check configuration bitfield:
- 1'b0: disabled
- 1'b1: enabled
</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>BIT_LENGTH</name>
								<description>Character length bitfield:
- 2'b00: 5 bits
- 2'b01: 6 bits
- 2'b10: 7 bits
- 2'b11: 8 bits
</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>STOP_BITS</name>
								<description> Stop bits length bitfield:
- 1'b0: 1 stop bit
- 1'b1: 2 stop bits
</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>POLLING_EN</name>
								<description>When in uart read, use polling method to read the data, read
interrupt enable flag will be ignored:
- 1'b0: Do not using polling method to read data.
- 1'b1: Using polling method to read data. Interrupt enable flag will be ignored.</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>CLEAN_FIFO</name>
								<description>In all mode clean the RX fifo, set 1 then set 0 to realize a reset
fifo:
- 1'b0: Stop Clean the RX FIFO.
- 1'b1: Clean the RX FIFO.</description>
								<bitRange>[5:5]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>TX_ENA</name>
								<description> TX transceiver configuration bitfield:
- 1'b0: disabled
- 1'b1: enabled
</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>RX_ENA</name>
								<description>RX transceiver configuration bitfield:
- 1'b0: disabled
- 1'b1: enabled</description>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>CLKDIV</name>
								<description>UART Clock divider configuration bitfield. The baudrate is equal to
SOC_FREQ/CLKDIV.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_TX_CFG</name>
						<description>TX SPI uDMA
transfer configuration</description>
						<addressOffset>0x0118</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SPIM_RX_CFG</name>
						<description>RX SPI uDMA
transfer configuration</description>
						<addressOffset>0x0108</addressOffset>
						<resetValue>0x0004</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CONTINOUS</name>
								<description>Channel continuous mode:
-1'b0: disable
-1'b1: enable
At the end of the buffer the uDMA reloads the address and size and starts a new transfer.</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>DATASIZE</name>
								<description>Channel transfer size used to increment uDMA buffer address pointer:
- 2'b00: +1 (8 bits)
- 2'b01: +2 (16 bits)
- 2'b10: +4 (</description>
								<bitRange>[2:1]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>EN</name>
								<description>Channel enable and start transfer:
-1'b0: disable
-1'b1: enable
This signal is used also to queue a transfer if one is already ongoing</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>PENDING</name>
								<description>Transfer pending in queue status flag:
-1'b0: free
-1'b1: pending</description>
								<bitRange>[5:5]</bitRange>
								<access>read-only</access>
							</field>
							<field>
								<name>CLR</name>
								<description>Channel clear and stop transfer:
-1'b0: disable
-1'b1: enable</description>
								<bitRange>[6:6]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>TX_CH0_LEN1</name>
						<description>FILTER tx channel  length2 register</description>
						<addressOffset>0x040C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_LEN1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TX_CH0_CFG</name>
						<description>FILTER tx channel  configuration register</description>
						<addressOffset>0x0404</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIZE</name>
								<description> Data transfer format:
- 2'b00: 8-bit
- 2'b01:16-bit
- 2;b10:32-bit</description>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>MODE</name>
								<description>Data transfer mode:
- 2'b00: Linear
- 2'b01: Sliding
- 2;b10:Circular
- 2;b11:2D
</description>
								<bitRange>[9:8]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>LINEAR</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SLIDING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CIRCULAR</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>2D</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>TX_CH0_LEN2</name>
						<description>FILTER tx channel 0 length2 register</description>
						<addressOffset>0x0410</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_LEN2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TX_CH0_LEN0</name>
						<description>FILTER tx channel length1 register</description>
						<addressOffset>0x0408</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_ADD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TX_CH0_ADD</name>
						<description>FILTER tx channel address register</description>
						<addressOffset>0x0400</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH0_ADD</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>TX_CH1_ADD</name>
						<description>FILTER tx channel address register</description>
						<addressOffset>0x0414</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_ADD</name>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>TX_CH1_CFG</name>
						<description>FILTER tx channel  configuration register</description>
						<addressOffset>0x0418</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIZE</name>
								<description> Data transfer format:
- 2'b00: 8-bit
- 2'b01:16-bit
- 2;b10:32-bit</description>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>MODE</name>
								<description>Data transfer mode:
- 2'b00: Linear
- 2'b01: Sliding
- 2;b10:Circular
- 2;b11:2D
</description>
								<bitRange>[9:8]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SLIDING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LINEAR</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CIRCULAR</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>2D</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>TX_CH1_LEN0</name>
						<description>FILTER tx channel length1 register</description>
						<addressOffset>0x041C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_ADD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TX_CH1_LEN1</name>
						<description>FILTER tx channel  length2 register</description>
						<addressOffset>0x0420</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_LEN1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FILT_CMD</name>
						<description>FILTER start register</description>
						<addressOffset>0x045C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>Filter start flag, write only, write 1 to start the filter :</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>BINCU_VAL</name>
						<description>FILTER binarization result
count register</description>
						<addressOffset>0x0454</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>REG_BINCU_VAL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>BINCU_CNT</name>
						<description>FILTER binarization count register</description>
						<addressOffset>0x044C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>COUNT</name>
								<description> Binarization and counting unit count value set.</description>
								<bitRange>[19:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>EN</name>
								<description>Binarization and counting unit enable:
-1'b0: not enable
-1'b1: enable</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>AU_REG1</name>
						<description>FILTER arithmetic unit 1 register</description>
						<addressOffset>0x0444</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_AU_REG1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AU_CFG</name>
						<description>FILTER arithmetic unit configuration register</description>
						<addressOffset>0x043C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIGNED</name>
								<description>Arithmetic Unit result signed or not.
-1'b0: not signed
-1'b1: signed
</description>
								<bitRange>[0:0]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>NOT_SIGNED</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SIGNED</name>
										<value>1</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>BYPASS</name>
								<description>Arithmetic Unit bypass or not.
-1'b0: not bypass AU
-1'b1: bypass AU</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>Arithmetic Unit mode:
-4'b0000: AU_MODE_AxB
-4'b0001: AU_MODE_AxB+REG0
-4'b0010: AU_MODE_AxB accumulation
-4'b0011: AU_MODE_AxA
-4'b0100: AU_MODE_AxA+B
-4'b0101: AU_MODE_AxA-B
-4'b0110: AU_MODE_AxA accumulation
-4'b0111: AU_MODE_AxA+REG0
-4'b1000: AU_MODE_AxREG1
-4'b1001: AU_MODE_AxREG1+B
-4'b1010: AU_MODE_AxREG1-B
-4'b1011: AU_MODE_AxREG1+REG0
-4'b1100: AU_MODE_AxREG1 accumulation
-4'b1101: AU_MODE_A+B
-4'b1110: AU_MODE_A-B
-4'b1111: AU_MODE_A+REG0
</description>
								<bitRange>[11:8]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>AU_MODE_AxB</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxBplusREG0</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxB_accumulation</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxA</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxAplusB</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxAminusB</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxA_accumulation</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxAplusREG0</name>
										<value>7</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1</name>
										<value>8</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1plusB</name>
										<value>9</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1minusB</name>
										<value>10</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1plusREG0</name>
										<value>11</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AxREG1_accumulation</name>
										<value>12</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AplusB</name>
										<value>13</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AminusB</name>
										<value>14</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>AU_MODE_AplusREG0</name>
										<value>15</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>SHIFT</name>
								<description> Arithmetic Unit shift window size, (0 – 31).</description>
								<bitRange>[20:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RX_CH_LEN1</name>
						<description>FILTER RX channel length1 register</description>
						<addressOffset>0x0434</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_LEN1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RX_CH_CFG</name>
						<description>FILTER RX channel configuration register</description>
						<addressOffset>0x042C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SIZE</name>
								<description> Data transfer format:
- 2'b00: 8-bit
- 2'b01:16-bit
- 2;b10:32-bit</description>
								<bitRange>[1:0]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>8BITS</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>16BITS</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>32BITS</name>
										<value>2</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>MODE</name>
								<description>Data transfer mode:
- 2'b00: Linear
- 2'b01: Sliding
- 2;b10:Circular
- 2;b11:2D
</description>
								<bitRange>[9:8]</bitRange>
								<access>read-write</access>
								<enumeratedValues>
									<enumeratedValue>
										<name>SLIDING</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>LINEAR</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CIRCULAR</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>2D</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>TX_CH1_LEN2</name>
						<description>FILTER RX channel configuration register</description>
						<addressOffset>0x0424</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TX_CH1_LEN2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FILT_STATUS</name>
						<description>FILTER status register</description>
						<addressOffset>0x0460</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>DONE</name>
								<description> Filter done flag, write 1 to clear the flag :
-1'b0: Filter process is not finished
-1'b1: Filter process is finished</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FILT</name>
						<description>FILTER control
mode register</description>
						<addressOffset>0x0458</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_FILT</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>BINCU_SETUP</name>
						<description>FILTER binarization result count register</description>
						<addressOffset>0x0450</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_BINCU_SETUP</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>BINCU_TH</name>
						<description>FILTER binarization threshold register</description>
						<addressOffset>0x0448</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_BINCU_TH</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AU_REG0</name>
						<description>FILTER arithmetic unit 0 register</description>
						<addressOffset>0x0440</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_AU_REG0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RX_CH_LEN2</name>
						<description>FILTER RX channel length2 register</description>
						<addressOffset>0x0438</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_LEN2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RX_CH_LEN0</name>
						<description>FILTER RX channel configuration register</description>
						<addressOffset>0x0430</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_LEN0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RX_CH_ADD</name>
						<description>FILTER RX channel address register</description>
						<addressOffset>0x0428</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_RX_CH_ADD</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>AdvancedTimer</name>
					<addressOffset>0x4000</addressOffset>
					<register>
						<name>T0_CMD</name>
						<description>ADV_TIMER0 command register</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER0 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER0 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER0 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER0 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER0 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_CONFIG</name>
						<description>ADV_TIMER0 configuration register.</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER0 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER0 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER0 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER0 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER0 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_THRESHOLD</name>
						<description>ADV_TIMER0 threshold configuration register.
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER0 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER0 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL0</name>
						<description>ADV_TIMER0 channel 0 threshold configuration register</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL1</name>
						<description>ADV_TIMER0 channel 1 threshold configuration register</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL2</name>
						<description>ADV_TIMER0 channel 2 threshold configuration register</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 2 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 2 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_TH_CHANNEL3</name>
						<description>ADV_TIMER0 channel 3 threshold configuration register</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER0 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER0 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T0_COUNTER</name>
						<description>ADV_TIMER0 counter register</description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>T0_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_CMD</name>
						<description>ADV_TIMER1 command register</description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER1 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER1 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER1 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER1 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER1 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_CONFIG</name>
						<description>ADV_TIMER1 configuration register</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER1 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER1 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER1 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER1 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER1 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_THRESHOLD</name>
						<description>ADV_TIMER1 threshold configuration register</description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER1 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER1 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL0</name>
						<description>ADV_TIMER1 channel 0 threshold configuration register</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER1 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER1 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL1</name>
						<description>ADV_TIMER1 channel 1 threshold configuration register</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER1 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER1 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL2</name>
						<description>ADV_TIMER1 channel 2 threshold configuration register</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_TH_CHANNEL3</name>
						<description>ADV_TIMER1 channel 3 threshold configuration register</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER1 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER1 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T1_COUNTER</name>
						<description>ADV_TIMER1 counter register</description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>T1_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_CMD</name>
						<description>ADV_TIMER2 command register</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER2 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER2 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER2 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER2 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER2 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_CONFIG</name>
						<description>ADV_TIMER2 configuration register</description>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER2 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER2 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER2 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER2 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER2 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_THRESHOLD</name>
						<description>ADV_TIMER2 threshold configuration register</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER2 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER2 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL0</name>
						<description>ADV_TIMER2 channel 0 threshold configuration register</description>
						<addressOffset>0x008C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL1</name>
						<description>ADV_TIMER2 channel 1 threshold configuration register</description>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL2</name>
						<description>ADV_TIMER2 channel 2 threshold configuration register</description>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 2 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 2 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_TH_CHANNEL3</name>
						<description>ADV_TIMER2 channel 3 threshold configuration register</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER2 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER2 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T2_COUNTER</name>
						<description>ADV_TIMER2 counter register</description>
						<addressOffset>0x00AC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>T2_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_CMD</name>
						<description>ADV_TIMER3 command register</description>
						<addressOffset>0x00C0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START</name>
								<description>ADV_TIMER3 start command bitfield</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>STOP</name>
								<description>ADV_TIMER3 stop command bitfield.
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>UPDATE</name>
								<description>ADV_TIMER3 update command bitfield.
</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>RESET</name>
								<description>ADV_TIMER3 reset command bitfield</description>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>ARM</name>
								<description>ADV_TIMER3 arm command bitfield.
</description>
								<bitRange>[4:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_CONFIG</name>
						<description>ADV_TIMER3 configuration register</description>
						<addressOffset>0x00C4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>INSEL</name>
								<description>ADV_TIMER3 input source configuration bitfield:
- 0-31: GPIO[0] to GPIO[31]
- 32-35: Channel 0 to 3 of ADV_TIMER0
- 36-39: Channel 0 to 3 of ADV_TIMER1
- 40-43: Channel 0 to 3 of ADV_TIMER2
- 44-47: Channel 0 to 3 of ADV_TIMER3
</description>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description> ADV_TIMER3 trigger mode configuration bitfield:
- 3'h0: trigger event at each clock cycle.
- 3'h1: trigger event if input source is 0
- 3'h2: trigger event if input source is 1
- 3'h3: trigger event on input source rising edge
- 3'h4: trigger event on input source falling edge
- 3'h5: trigger event on input source falling or rising edge
- 3'h6: trigger event on input source rising edge when armed
- 3'h7: trigger event on input source falling edge when armed
</description>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>CLKSEL</name>
								<description>ADV_TIMER3 clock source configuration bitfield:
- 1'b0: FLL
- 1'b1: reference clock at 32kHz</description>
								<bitRange>[11:11]</bitRange>
							</field>
							<field>
								<name>UPDOWNSEL</name>
								<description> ADV_TIMER3 center-aligned mode configuration bitfield:
- 1'b0: The counter counts up and down alternatively.
- 1'b1: The counter counts up and resets to 0 when reach threshold.
</description>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>PRESC</name>
								<description>ADV_TIMER3 prescaler value configuration bitfield.
</description>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_THRESHOLD</name>
						<description>ADV_TIMER3 threshold configuration register</description>
						<addressOffset>0x00C8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH_LO</name>
								<description>ADV_TIMER3 threshold low part configuration bitfield. It defines start
counter value</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>TH_HI</name>
								<description>ADV_TIMER3 threshold high part configuration bitfield. It defines end counter value.</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL0</name>
						<description>ADV_TIMER3 channel 0 threshold configuration register</description>
						<addressOffset>0x00CC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 0 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 0 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL1</name>
						<description>ADV_TIMER3 channel 1 threshold configuration register</description>
						<addressOffset>0x00D0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 1 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 1 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL2</name>
						<description>ADV_TIMER3 channel 2 threshold configuration register</description>
						<addressOffset>0x00D4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 2 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 2 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_TH_CHANNEL3</name>
						<description>ADV_TIMER3 channel 3 threshold configuration register</description>
						<addressOffset>0x00D8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>TH</name>
								<description>ADV_TIMER3 channel 3 threshold configuration bitfield</description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>ADV_TIMER3 channel 3 threshold match action on channel output signal
configuration bitfield:
- 3'h0: set.
- 3'h1: toggle then next threshold match action is clear.
- 3'h2: set then next threshold match action is clear.
- 3'h3: toggle.
- 3'h4: clear.
- 3'h5: toggle then next threshold match action is set.
- 3'h6: clear then next threshold match action is set.</description>
								<bitRange>[18:16]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>TOGGLE_SET_NEXT</name>
										<value>5</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE_CLEAR_NEXT</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>TOGGLE</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET_CLEAR_NEXT</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>SET</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR_SET_NEXT</name>
										<value>6</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>CLEAR</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
						</fields>
					</register>
					<register>
						<name>CG</name>
						<description>ADV_TIMERS channels clock gating configuration register.
</description>
						<addressOffset>0x0104</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>ENA</name>
								<description>ADV_TIMER clock gating configuration bitfield.
- ENA[i]=0: clock gate ADV_TIMERi.
- ENA[i]=1: enable ADV_TIMERi.</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>T3_COUNTER</name>
						<description>ADV_TIMER3 counter register</description>
						<addressOffset>0x00EC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>T3_COUNTER</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>EVENT_CFG</name>
						<description>ADV_TIMERS events configuration register.</description>
						<addressOffset>0x0100</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EVENT_CFG</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>SocEventGenerator</name>
					<addressOffset>0x5000</addressOffset>
					<register>
						<name>SW_EVENT</name>
						<description>SoC software events trigger
register</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>EVENT</name>
								<description>Writing a one-hot value into EVENT triggers a SoC software event. 8 software events are available.
</description>
								<bitRange>[7:0]</bitRange>
								<access>write-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK0</name>
						<description>Events 0-31 dispatch mask
to FC

</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK0</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK1</name>
						<description>Events 32-63 dispatch mask
to FC</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK1</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK2</name>
						<description>Events 64-95 dispatch mask
to FC</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK2</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK3</name>
						<description>Events 96-127 dispatch
mask to FC</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK3</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK4</name>
						<description>Events 128-159 dispatch
mask to FC</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK4</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK5</name>
						<description>Events 160-191 dispatch
mask to FC</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK5</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK6</name>
						<description>Events 191-223 dispatch mask to FC
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK6</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>FC_MASK7</name>
						<description>F Events 224-255 dispatch
mask to peripherals
</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FC_MASK7</name>
								<description>Event Mask to enable/disable event dispatch to FC interrupt controller.

Setting bit[i] to 0b1 disables dispatching event to FC interrupt controller.

Setting bit[i] to 0b0 enables dispatching event to FC interrupt controller.</description>
								<bitRange>[31:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK1</name>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK1</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK2</name>
						<description>Events 0-31 dispatch mask to peripheralsEvents 64-95 dispatch mask to peripherals</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK2</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK3</name>
						<description>Events 96-127 dispatch mask to peripherals
</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK3</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK4</name>
						<description>Events 128-159 dispatch mask to peripheral</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK4</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK5</name>
						<description>Events 160-191 dispatch
mask to peripherals</description>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK5</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK6</name>
						<description>Events 191-223 dispatch mask to peripherals</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK6</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK7</name>
						<description>Events 224-255 dispatch mask to peripherals
</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK7</name>
								<description>Event Mask to enable/disable event dispatch to peripherals.

Setting bit[i] to 0b1 disables dispatching event to peripherals.

Setting bit[i] to 0b0 enables dispatching event to peripherals.</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR0</name>
						<description>Events 0-31 event queue
overflow</description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR0</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PR_MASK0</name>
						<description>Events 0-31 dispatch mask to peripherals</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0xFFFFFFFF</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PR_MASK0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR1</name>
						<description>Events 32-63 event queue
overflow</description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR1</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR2</name>
						<description>Events 64-95 event queue
overflow</description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR02</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR3</name>
						<description>Events 96-127 event queue
overflow</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR3</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR4</name>
						<description>Events 128-159 event queue
overflow</description>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR4</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR5</name>
						<description>Events 160-191 event queue
overflow</description>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR5</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR6</name>
						<description>Events 191-223 event queue
overflow</description>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR6</name>
								<description>Event queue overflow. Clear after read. 

Reading 0b1 at ERR[i] means the
event queue of event with id i overflowed.
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TIMER_HI</name>
						<description>Trigger Timer HI of APB
Timer with event</description>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>TIMER_HI_EVENT</name>
								<description>Trigger and start APB Timer HI by the event with id
that equals TIMER_HI_EVENT
</description>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ERR7</name>
						<description>Events 224-255 event queue overflow
</description>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ERR7</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TIMER_LO</name>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>TIMER_LO_EVENT</name>
								<description>Trigger and start APB Timer LO by the event with id
that equals TIMER_LO_EVENT
</description>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>EventInterruptUnit</name>
					<addressOffset>0x8000</addressOffset>
					<register>
						<name>MASK_read</name>
						<description>This register contains the MASK (interrupt enable) for each of the 32 interrupts or events.

Writing to 0x1A10_9004 sets the bits of the MASK register selected
Writing to 0x1A10_9008 clears the bits of the MASK register selected.
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>MASK</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MASK_set</name>
						<description>This register contains the MASK (interrupt enable) for each of the 32 interrupts or events. Writing to 0x1A10_9004 sets the bits of the MASK register selected.
Writing to 0x1A10_9008 clears the bits of the MASK register selected.
</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>MASK_set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>MASK_clear</name>
						<description>This register contains the MASK (interrupt enable) for each of the 32 interrupts or events. Writing to 0x1A10_9004 sets the bits of the MASK register selected.
Writing to 0x1A10_9008 clears the bits of the MASK register selected.
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>MASK_clear</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INT_read</name>
						<description>This register contains the pending interrupts or events. Writing to 0x1A10_9010
sets the bits of the INT register selected. Writing to 0x1A10_9014 clears the bits of
the INT register selected.</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>INT_read</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INT_set</name>
						<description>INT_read</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>INT_set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INT_clear</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>INT_clear</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ACK_read</name>
						<description>This register contains the ACK (interrupt enable) for each of the 32 interrupts
or events. Writing to 0x1A10_901C sets the bits of the ACK register selected. Writing
to 0x1A10_9020 clears the bits of the ACK register selected.
</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>ACK_read</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ACK_set</name>
						<description>This register contains the ACK (interrupt enable) for each of the 32 interrupts
or events. Writing to 0x1A10_901C sets the bits of the ACK register selected. Writing
to 0x1A10_9020 clears the bits of the ACK register selected.
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>ACK_set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ACK_clear</name>
						<description>This register contains the ACK (interrupt enable) for each of the 32 interrupts
or events. Writing to 0x1A10_901C sets the bits of the ACK register selected. Writing
to 0x1A10_9020 clears the bits of the ACK register selected.
</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>ACK_clear</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FIFO_DATA</name>
						<description>Fifo Content.

This is a read-only register that contain the first valid value of the FIFO.
</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>FIFO_DATA</name>
								<description>This is a read-only register that contain the first valid value of the FIFO</description>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Timer</name>
					<addressOffset>0xA000</addressOffset>
					<register>
						<name>CFG_LO</name>
						<description>Timer Low Configuration register
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EN</name>
								<description>Timer enable (starts couting) bit
</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>RST</name>
								<description>Timer low reset, cleared after the reset happened
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>IRQEN</name>
								<description>Timer low interrupt generation on compare match enable</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>Timer low continuous mode configuration

0b0: Continue incrementing timer low counter after a compare match with CMP_LO

0b1: Reset timer to after a compare match with CMP_LO
</description>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>ONES</name>
								<description>Timer low one shot configuration</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PEN</name>
								<description>Timer low prescaler enable bit</description>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>CCFG</name>
								<description>Timer low clock source configuration

0b0: FLL or FLL plus Prescaler
0b1: 32 kHz reference clock</description>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PVAL</name>
								<description>Timer low prescaler value. ftimer = fclk/(1 + P V AL)</description>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>CASC</name>
								<description> Timer low and Timer high 64-bit cascaded mode enable bit</description>
								<bitRange>[31:31]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CFG_HI</name>
						<description>Timer High Configuration
register</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EN</name>
								<description>Timer enable (starts couting) bit
</description>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>RST</name>
								<description>Timer high reset, cleared after the reset happened
</description>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>IRQEN</name>
								<description>Timer hi interrupt generation on compare match enable</description>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>MODE</name>
								<description>Timer hi continuous mode configuration

0b0: Continue incrementing timer hi counter after a compare match with CMP_HI

0b1: Reset timer to after a compare match with CMP_HI
</description>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>ONES</name>
								<description>Timer hi one shot configuration</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PEN</name>
								<description>Timer hi prescaler enable bit</description>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>CCFG</name>
								<description>Timer hi clock source configuration

0b0: FLL or FLL plus Prescaler
0b1: 32 kHz reference clock</description>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PVAL</name>
								<description>Timer hi prescaler value. ftimer = fclk/(1 + PVAL)</description>
								<bitRange>[15:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CNT_LO</name>
						<description>Timer Low counter value register</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CNT_LO</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CNT_HI</name>
						<description>Timer High counter value register</description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CNT_HI</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CMP_LO</name>
						<description>Timer Low comparator value register
</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMP_LO</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CMP_HI</name>
						<description>Timer High comparator value register</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CMP_HI</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>START_LO</name>
						<description>Start Timer Low counting register</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START_LO</name>
								<description>Timer high start command (sets EN in CFG_LO)</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>START_HI</name>
						<description>Start Timer High counting register
</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>START_HI</name>
								<description>Timer high reset command (writes RST in CFG_LO)</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RESET_LO</name>
						<description>Reset Timer Low counter register</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RESET_LO</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RESET_HI</name>
						<description>Reset Timer High counter register</description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>RESET_HI</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>SDIO</name>
					<addressOffset>0x0001F000</addressOffset>
					<register>
						<name>CMD_OP</name>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>RSP_TYPE</name>
								<description>Values for RSP_TYPE:

3'b000: RSP_TYPE_NULL 
3'b001: RSP_TYPE_48_CRC
3'b010:  RSP_TYPE_48_NOCRC
3'b011: RSP_TYPE_136
3'b100: RSP_TYPE_48_BSY</description>
								<bitRange>[2:0]</bitRange>
								<enumeratedValues>
									<enumeratedValue>
										<name>RSP_TYPE_NULL</name>
										<value>0</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RSP_TYPE_48_CRC</name>
										<value>1</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RSP_TYPE_48_NOCRC</name>
										<value>2</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RSP_TYPE_136</name>
										<value>3</value>
									</enumeratedValue>
									<enumeratedValue>
										<name>RSP_TYPE_48_BSY</name>
										<value>4</value>
									</enumeratedValue>
								</enumeratedValues>
							</field>
							<field>
								<name>CMD_OPCODE</name>
								<bitRange>[13:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CMD_ARG</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>CMD_ARGUMENT</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DATA_SETUP</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>EN</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>RWN</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>QUAD</name>
								<bitRange>[7:2]</bitRange>
							</field>
							<field>
								<name>Block_Num</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>BLOCK_SIZE</name>
								<bitRange>[25:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>START</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>START</name>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STOP</name>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>STOP</name>
								<bitRange>[31:31]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RSP0</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RESPONSE_WORD0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CID3</name>
						<description>Card Identification Word 3</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>card_id_word3</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CID1</name>
						<description>Card Identification Word 1</description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>card_id_word1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS</name>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0010</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>EOT</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>ERR</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>CARD_ERR</name>
								<bitRange>[11:2]</bitRange>
							</field>
							<field>
								<name>VHS</name>
								<description>Note: 
Is reset value correct?</description>
								<bitRange>[15:12]</bitRange>
							</field>
							<field>
								<name>Status</name>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RSP3</name>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RESPONSE_WORD3</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RSP1</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RESPONSE_WORD1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RCA</name>
						<addressOffset>0x0058</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RCA</name>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CID2</name>
						<description>Card Identification Word 2</description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>card_id_word2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CID0</name>
						<description>Card Identification Word0 </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>card_id_word0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLK_DIV_0</name>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Div_count</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Valid</name>
								<bitRange>[8:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>RSP2</name>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>RESPONSE_WORD2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>SocControl</name>
					<addressOffset>0x3000</addressOffset>
					<register>
						<name>INFO</name>
						<description>This register holds the number of clusters and the number of cores in the each
cluster.
 It is a read-only register.
</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x00040000</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>cluster_count</name>
								<description>Number of Clusters </description>
								<bitRange>[15:0]</bitRange>
							</field>
							<field>
								<name>core_count</name>
								<description>Number of Cores</description>
								<bitRange>[31:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FCBOOT</name>
						<description>This register holds the boot address.</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x1A000080</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>FCBOOT</name>
								<description>Boot Start address</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>FCFETCH</name>
						<description>This register contains the value of the fetch enable signal of the core.
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0001</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>FCFETCH</name>
								<description>Enable Fetch,  1 to enable core execution</description>
								<bitRange>[0:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_MUX_0</name>
						<description>The content of these registers can be used to multiplex pads when targeting an ASIC. 

The first register (0x1A10_4010) can be used to set the mux (2 bit
select) from pin 0 (bits [1:0]) to 15 (bits [31:30]).</description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pad_0</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>pad_1</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>pad_2</name>
								<bitRange>[5:4]</bitRange>
							</field>
							<field>
								<name>pad_3</name>
								<bitRange>[7:6]</bitRange>
							</field>
							<field>
								<name>pad_4</name>
								<bitRange>[9:8]</bitRange>
							</field>
							<field>
								<name>pad_5</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>pad_6</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>pad_7</name>
								<bitRange>[15:14]</bitRange>
							</field>
							<field>
								<name>pad_8</name>
								<bitRange>[17:16]</bitRange>
							</field>
							<field>
								<name>pad_9</name>
								<bitRange>[19:18]</bitRange>
							</field>
							<field>
								<name>pad_10</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>pad_11</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>pad_12</name>
								<bitRange>[25:24]</bitRange>
							</field>
							<field>
								<name>pad_13</name>
								<bitRange>[27:26]</bitRange>
							</field>
							<field>
								<name>pad_14</name>
								<bitRange>[29:28]</bitRange>
							</field>
							<field>
								<name>pad_15</name>
								<bitRange>[31:30]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLUSTER_BOOT_ADDR0</name>
						<addressOffset>0x0080</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CLUSTER_BOOT_ADDR0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CS_RO</name>
						<addressOffset>0x00C0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CS_RO</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>BOOTSEL</name>
						<description>Boot Sel value
</description>
						<addressOffset>0x00C4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>bootsel_pad</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLUSTER_BOOT_ADDR1</name>
						<addressOffset>0x0084</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CLUSTER_BOOT_ADDR1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>JTAGREG</name>
						<description>Register to read or write from JTAG</description>
						<addressOffset>0x0074</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>jtag_reg_write</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>jtag_reg_read</name>
								<bitRange>[15:8]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CTRL_PER</name>
						<addressOffset>0x0078</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Sel_hyper_axi</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CLKSEL</name>
						<addressOffset>0x00C8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>CLKSEL</name>
								<description>Irrelevant. Select FLL clock. Sysctrl does not have FLL
</description>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CORESTATUS</name>
						<description>These 2 registers (CORESTATUS, CS_RO) contain the status of the system for testing/verification purposes like End Of Computation. The 0x1A10_40C0 register is read-only.</description>
						<addressOffset>0x00A0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CORE_STATUS</name>
								<bitRange>[1:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLUSTER_IRQ</name>
						<addressOffset>0x007C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Cluster_IRQ</name>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_1</name>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x8C012003</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_3_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_3_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_3_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_3_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_3_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_3_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_3_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_3_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>PAD_4_drive_strength</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>PAD_4_trigger</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>PAD_4_rate</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>PAD_4_output_en</name>
								<description>0: Enable</description>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>PAD_4_hold</name>
								<bitRange>[16:16]</bitRange>
							</field>
							<field>
								<name>PAD_4_pull_enable</name>
								<bitRange>[17:17]</bitRange>
							</field>
							<field>
								<name>PAD_4_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[18:18]</bitRange>
							</field>
							<field>
								<name>PAD_4_input_en</name>
								<bitRange>[19:19]</bitRange>
							</field>
							<field>
								<name>PAD_5_drive_strength</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>PAD_5_trigger</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>PAD_5_rate</name>
								<bitRange>[24:24]</bitRange>
							</field>
							<field>
								<name>PAD_5_output_en</name>
								<description>0: Enable</description>
								<bitRange>[25:25]</bitRange>
							</field>
							<field>
								<name>PAD_5_hold</name>
								<bitRange>[26:26]</bitRange>
							</field>
							<field>
								<name>PAD_5_pull_enable</name>
								<bitRange>[27:27]</bitRange>
							</field>
							<field>
								<name>PAD_5_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[28:28]</bitRange>
							</field>
							<field>
								<name>PAD_5_input_en</name>
								<bitRange>[29:29]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLUSTER_CTRL</name>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0009</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>bypass</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>POW</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>fetch_enable</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>rstn</name>
								<bitRange>[3:3]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TTA_PLL_LOOP_CTRL</name>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TTA_PLL_DIV</name>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TTA_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TTA_PLL_ENABLE</name>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Enable</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Valid</name>
								<bitRange>[23:23]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TTA_PLL_SPARE_CTRL</name>
						<addressOffset>0x0088</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TTA_PLL_TMUX_SEL</name>
						<addressOffset>0x008C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TTA_PLL_STATUS1</name>
						<addressOffset>0x0090</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_0</name>
						<description>All 10 bit fields have reset value of 10'b10_0011_0100: 0 drive strenght 1 drive strenght 2 trigger 3 trigger 4 rate 5 output en(0) 6 hold 7 pull enable 8 pd(0)/pu(1) 9 input en(1)




</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x8C012003</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PAD_0_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_0_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_0_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_0_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_0_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_0_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_0_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_0_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>PAD_1_drive_strength</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>PAD_1_trigger</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>PAD_1_rate</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>PAD_1_output_en</name>
								<description>0: Enable</description>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>PAD_1_hold</name>
								<bitRange>[16:16]</bitRange>
							</field>
							<field>
								<name>PAD_1_pull_enable</name>
								<bitRange>[17:17]</bitRange>
							</field>
							<field>
								<name>PAD_1_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[18:18]</bitRange>
							</field>
							<field>
								<name>PAD_1_input_en</name>
								<bitRange>[19:19]</bitRange>
							</field>
							<field>
								<name>PAD_2_drive_strength</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>PAD_2_trigger</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>PAD_2_rate</name>
								<bitRange>[24:24]</bitRange>
							</field>
							<field>
								<name>PAD_2_output_en</name>
								<description>0: Enable</description>
								<bitRange>[25:25]</bitRange>
							</field>
							<field>
								<name>PAD_2_hold</name>
								<bitRange>[26:26]</bitRange>
							</field>
							<field>
								<name>PAD_2_pull_enable</name>
								<bitRange>[27:27]</bitRange>
							</field>
							<field>
								<name>PAD_2_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[28:28]</bitRange>
							</field>
							<field>
								<name>PAD_2_input_en</name>
								<bitRange>[29:29]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTER_CLK_DIV</name>
						<description>Clock divider ratio for the 3 Interconnect modules
</description>
						<addressOffset>0x00CC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>CFGICN_DIV</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>LPICN_DIV</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>HPICN_DIV</name>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PERIPH_CLK_DIV</name>
						<addressOffset>0x00A8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>PERIPH_CLK_DIV</name>
								<bitRange>[9:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TTA_PLL_STATUS2</name>
						<addressOffset>0x00BC</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
								<access>read-only</access>
							</field>
						</fields>
					</register>
					<register>
						<name>TOPPERIPH_CLK_DIV</name>
						<addressOffset>0x0094</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_TOPPERIPH_CLK_DIV</name>
								<description>Clock divider ratio for Top peripheral module
</description>
								<bitRange>[15:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>CLK_CTRL1</name>
						<description>Subsystem Clock selection. Bit definition for TTA, Ethernet, AI, HPC subsystems

*_CLK_CTRL Bitfield definitions
[bit]:[field]

0: sel_cka
1: force_cka
2: force_ckb
3: subsys_clkena
4: -
5: -
6: -
7: pll_ctrl_valid</description>
						<addressOffset>0x0098</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>tta_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>tta_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>tta_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>tta_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>tta_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[10:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[11:11]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[15:15]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[17:17]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[18:18]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[19:19]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[23:23]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>hpc_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[24:24]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>hpc_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[25:25]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>hpc_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[26:26]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>hpc_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[27:27]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>hpc_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CLK_CTRL2</name>
						<description>Subsystem Clock selection. Bit definition for MPC, Interconnect, C2C and CoreHW subsystems

*_CLK_CTRL Bitfield definitions
[bit]:[field]

0: sel_cka
1: force_cka
2: force_ckb
3: subsys_clkena
4: -
5: -
6: -
7: pll_ctrl_valid</description>
						<addressOffset>0x009C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>mpc_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>mpc_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>mpc_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>mpc_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>mpc_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[9:9]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[10:10]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[11:11]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[15:15]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[17:17]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[18:18]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[19:19]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[23:23]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corehw_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[24:24]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corehw_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[25:25]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corehw_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[26:26]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corehw_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[27:27]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>corehw_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[31:31]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SS_RESET_EN</name>
						<description>Assertion of the Subsystem bit, deasserts the reset to the corresponding subsystem. Bit definition is mentioned in adjoining table
</description>
						<addressOffset>0x00B0</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pulpissimo</name>
								<description>Pulpissimo subsystem reset enable</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect</name>
								<description>interconnect subsystem reset enable</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_peripheral</name>
								<description>Top Peripheral reset enable</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c</name>
								<description>C2C reset enable</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>core_hw</name>
								<description>coreHW reset enable</description>
								<bitRange>[12:12]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>TTA</name>
								<description>TTA Reset enable</description>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet</name>
								<description>Ethernet subsystem reset enable</description>
								<bitRange>[20:20]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI</name>
								<description>AI subsystem reset enable</description>
								<bitRange>[24:24]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>HPC</name>
								<description>HPC subsystem reset enable</description>
								<bitRange>[28:28]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SS_CLK_EN</name>
						<description>Subsystem clock enable register</description>
						<addressOffset>0x00B4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>pulpissimo</name>
								<description>Pulpissimo subsystem clock enable</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>interconnect</name>
								<description>interconnect subsystem clock enable</description>
								<bitRange>[4:4]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_peripheral</name>
								<description>Top Peripheral subsystem clock enable</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>c2c</name>
								<description>C2C  clock enable</description>
								<bitRange>[8:8]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>core_hw</name>
								<description>coreHW subsystem clock enable</description>
								<bitRange>[12:12]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>TTA</name>
								<description>TTA subsystem clock enable</description>
								<bitRange>[16:16]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>ethernet</name>
								<description>Ethernet subsystem clock enable</description>
								<bitRange>[20:20]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>AI</name>
								<description>AI subsystem clock enable</description>
								<bitRange>[24:24]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>HPC</name>
								<description>HPC subsystem clock enable</description>
								<bitRange>[28:28]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>CLK_CTRL3</name>
						<description>Subsystem Clock selection. Bit definition for Top peripheral subsystem.

*_CLK_CTRL Bitfield definitions
[bit]:[field]

0: sel_cka
1: force_cka
2: force_ckb
3: subsys_clkena
4: -
5: -
6: -
7: pll_ctrl_valid</description>
						<addressOffset>0x00B8</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>top_periph_sel_cka</name>
								<description>Select CKA</description>
								<bitRange>[0:0]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_periph_force_cka</name>
								<description>Force CKA</description>
								<bitRange>[1:1]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_periph_force_ckb</name>
								<description>Force CKB</description>
								<bitRange>[2:2]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_periph_subsys_clkena</name>
								<description>Subsystem clock enable</description>
								<bitRange>[3:3]</bitRange>
								<access>read-write</access>
							</field>
							<field>
								<name>top_periph_pll_ctrl_valid</name>
								<description>PLL Control valid</description>
								<bitRange>[7:7]</bitRange>
								<access>read-write</access>
							</field>
						</fields>
					</register>
					<register>
						<name>SLOW_PULSE_DIV</name>
						<addressOffset>0x00A4</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>SLOW_PULSE_DIV</name>
								<bitRange>[9:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_2</name>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x8C012003</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_6_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_6_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_6_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_6_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_6_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_6_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_6_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_6_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>PAD_7_drive_strength</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>PAD_7_trigger</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>PAD_7_rate</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>PAD_7_output_en</name>
								<description>0: Enable</description>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>PAD_7_hold</name>
								<bitRange>[16:16]</bitRange>
							</field>
							<field>
								<name>PAD_7_pull_enable</name>
								<bitRange>[17:17]</bitRange>
							</field>
							<field>
								<name>PAD_7_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[18:18]</bitRange>
							</field>
							<field>
								<name>PAD_7_input_en</name>
								<bitRange>[19:19]</bitRange>
							</field>
							<field>
								<name>PAD_8_drive_strength</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>PAD_8_trigger</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>PAD_8_rate</name>
								<bitRange>[24:24]</bitRange>
							</field>
							<field>
								<name>PAD_8_output_en</name>
								<description>0: Enable</description>
								<bitRange>[25:25]</bitRange>
							</field>
							<field>
								<name>PAD_8_hold</name>
								<bitRange>[26:26]</bitRange>
							</field>
							<field>
								<name>PAD_8_pull_enable</name>
								<bitRange>[27:27]</bitRange>
							</field>
							<field>
								<name>PAD_8_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[28:28]</bitRange>
							</field>
							<field>
								<name>PAD_8_input_en</name>
								<bitRange>[29:29]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_3</name>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x8C012003</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_9_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_9_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_9_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_9_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_9_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_9_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_9_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_9_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>PAD_10_drive_strength</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>PAD_10_trigger</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>PAD_10_rate</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>PAD_10_output_en</name>
								<description>0: Enable</description>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>PAD_10_hold</name>
								<bitRange>[16:16]</bitRange>
							</field>
							<field>
								<name>PAD_10_pull_enable</name>
								<bitRange>[17:17]</bitRange>
							</field>
							<field>
								<name>PAD_10_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[18:18]</bitRange>
							</field>
							<field>
								<name>PAD_10_input_en</name>
								<bitRange>[19:19]</bitRange>
							</field>
							<field>
								<name>PAD_11_drive_strength</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>PAD_11_trigger</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>PAD_11_rate</name>
								<bitRange>[24:24]</bitRange>
							</field>
							<field>
								<name>PAD_11_output_en</name>
								<description>0: Enable</description>
								<bitRange>[25:25]</bitRange>
							</field>
							<field>
								<name>PAD_11_hold</name>
								<bitRange>[26:26]</bitRange>
							</field>
							<field>
								<name>PAD_11_pull_enable</name>
								<bitRange>[27:27]</bitRange>
							</field>
							<field>
								<name>PAD_11_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[28:28]</bitRange>
							</field>
							<field>
								<name>PAD_11_input_en</name>
								<bitRange>[29:29]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_5</name>
						<addressOffset>0x0034</addressOffset>
						<resetValue>0x00020034</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_15_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_15_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_15_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_15_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_15_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_15_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_15_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_15_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CFG_4</name>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x8C012003</resetValue>
						<resetMask>0x00000000</resetMask>
						<size>32</size>
						<fields>
							<field>
								<name>PAD_12_drive_strength</name>
								<bitRange>[1:0]</bitRange>
							</field>
							<field>
								<name>PAD_12_trigger</name>
								<bitRange>[3:2]</bitRange>
							</field>
							<field>
								<name>PAD_12_rate</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>PAD_12_output_en</name>
								<description>0: Enable</description>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>PAD_12_hold</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>PAD_12_pull_enable</name>
								<bitRange>[7:7]</bitRange>
							</field>
							<field>
								<name>PAD_12_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[8:8]</bitRange>
							</field>
							<field>
								<name>PAD_12_input_en</name>
								<bitRange>[9:9]</bitRange>
							</field>
							<field>
								<name>PAD_13_drive_strength</name>
								<bitRange>[11:10]</bitRange>
							</field>
							<field>
								<name>PAD_13_trigger</name>
								<bitRange>[13:12]</bitRange>
							</field>
							<field>
								<name>PAD_13_rate</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>PAD_13_output_en</name>
								<description>0: Enable</description>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>PAD_13_hold</name>
								<bitRange>[16:16]</bitRange>
							</field>
							<field>
								<name>PAD_13_pull_enable</name>
								<bitRange>[17:17]</bitRange>
							</field>
							<field>
								<name>PAD_13_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[18:18]</bitRange>
							</field>
							<field>
								<name>PAD_13_input_en</name>
								<bitRange>[19:19]</bitRange>
							</field>
							<field>
								<name>PAD_14_drive_strength</name>
								<bitRange>[21:20]</bitRange>
							</field>
							<field>
								<name>PAD_14_trigger</name>
								<bitRange>[23:22]</bitRange>
							</field>
							<field>
								<name>PAD_14_rate</name>
								<bitRange>[24:24]</bitRange>
							</field>
							<field>
								<name>PAD_14_output_en</name>
								<description>0: Enable</description>
								<bitRange>[25:25]</bitRange>
							</field>
							<field>
								<name>PAD_14_hold</name>
								<bitRange>[26:26]</bitRange>
							</field>
							<field>
								<name>PAD_14_pull_enable</name>
								<bitRange>[27:27]</bitRange>
							</field>
							<field>
								<name>PAD_14_pd_pu</name>
								<description>Pull down or pull up register, default pull down
0: pull down
1: pull up</description>
								<bitRange>[28:28]</bitRange>
							</field>
							<field>
								<name>PAD_14_input_en</name>
								<bitRange>[29:29]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>ETH_PLL</name>
					<addressOffset>0x30D0</addressOffset>
					<register>
						<name>ETH_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ETH_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ETH_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ETH_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ETH_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ETH_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ETH_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>ETH_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>AI_PLL</name>
					<addressOffset>0x30F0</addressOffset>
					<register>
						<name>AI_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AI_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AI_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AI_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AI_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AI_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AI_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AI_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>HPC_PLL</name>
					<addressOffset>0x3110</addressOffset>
					<register>
						<name>HPC_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>HPC_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>HPC_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>HPC_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>HPC_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>HPC_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>HPC_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>HPC_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>PULP_PLL</name>
					<addressOffset>0x3130</addressOffset>
					<register>
						<name>PULP_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PULP_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PULP_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PULP_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PULP_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PULP_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PULP_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PULP_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>INTER_PLL</name>
					<addressOffset>0x3150</addressOffset>
					<register>
						<name>INTER_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTER_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTER_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTER_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTER_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTER_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTER_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INTER_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>C2C_PLL</name>
					<addressOffset>0x3170</addressOffset>
					<register>
						<name>C2C_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>C2C_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>C2C_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>C2C_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>C2C_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>C2C_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>C2C_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>C2C_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>TOPPERIPH_PLL</name>
					<addressOffset>0x31B0</addressOffset>
					<register>
						<name>TOPPERIPH_PLL_LOOP_CTRL</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>LOOP_CTRL</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TOPPERIPH_PLL_DIV</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>r_div</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>n_div</name>
								<bitRange>[13:4]</bitRange>
							</field>
							<field>
								<name>m_div</name>
								<bitRange>[16:14]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TOPPERIPH_PLL_DEBUG_CTRL</name>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Debug_Ctrl</name>
								<bitRange>[7:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TOPPERIPH_PLL_ENABLE</name>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TOPPERIPH_PLL_SPARE_CTRL</name>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>spare_ctrl</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TOPPERIPH_PLL_TMUX_SEL</name>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Tmux_1</name>
								<bitRange>[3:0]</bitRange>
							</field>
							<field>
								<name>Tmux_2</name>
								<bitRange>[7:4]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TOPPERIPH_PLL_STATUS1</name>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status1</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>TOPPERIPH_PLL_STATUS2</name>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>status2</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>BootConfig</name>
					<addressOffset>0x31D0</addressOffset>
					<register>
						<name>BOOT_CFG</name>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_BOOT_CFG</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>BOOT_STATUS</name>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>REG_BOOT_STATUS</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>sdram</name>
			<version>2.0</version>
			<baseAddress>0x0000</baseAddress>
			<registers/>
		</peripheral>
		<peripheral>
			<name>DMA0</name>
			<version>1.0</version>
			<description>The Excel of Register Map can be found here. 

https://tuni.sharepoint.com/:x:/r/sites/TG-SoC-Hub/_layouts/15/Doc.aspx?sourcedoc=%7B971A5DEF-758E-4A18-8EA3-0F3F2D60F0BB%7D&amp;file=DMA_register_map.xlsx&amp;action=default&amp;mobileredirect=true&amp;cid=419a13fc-9dbd-45b9-8f31-77899c555ace

DMA Sub System Document available in below link:
https://tuni.sharepoint.com/:w:/r/sites/TG-SoC-Hub/_layouts/15/Doc.aspx?sourcedoc=%7B9E9DFD0D-B0CA-436B-ABA0-57DB3B73560E%7D&amp;file=DMA_Sub_System_Document.....docx&amp;action=default&amp;mobileredirect=true

</description>
			<baseAddress>0xFFA00000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0040</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0040</offset>
				<size>0x0080</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00C0</offset>
				<size>0x0080</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x01C0</offset>
				<size>0x0080</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0140</offset>
				<size>0x0080</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>Status_Registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>IP_ID</name>
						<description>Constant 32'h70646d61 default value ; &quot;pdma&quot; in ascii</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ID</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INFO</name>
						<description>32'h00200401 default value
Version number
Number of available channels
AXI data width</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>Version</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>No_of_Channels</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>AXI_Data_Width</name>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS0</name>
						<description>Holds status flags for Channel(0-3). Each Status Flag can either be cleared by writing to the STATUS_CLEAR register or when the STATUS register is read (must be configured)

Status bits of Reg Groups should be read by CPU 
 '0' = Reg Group is Idle 
 '1' = Hardware is using specific reg group
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_write</name>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_read</name>
								<bitRange>[15:15]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS1</name>
						<description>Holds status flags for Channel(0-3). Each Status Flag can either be cleared by writing to the STATUS_CLEAR register or when the STATUS register is read (must be configured)

Status bits of Reg Groups should be read by CPU 
 '0' = Reg Group is Idle 
 '1' = Hardware is using specific reg group
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_write</name>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_read</name>
								<bitRange>[15:15]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS2</name>
						<description>Holds status flags for Channel(0-3). Each Status Flag can either be cleared by writing to the STATUS_CLEAR register or when the STATUS register is read (must be configured)

Status bits of Reg Groups should be read by CPU 
 '0' = Reg Group is Idle 
 '1' = Hardware is using specific reg group
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_write</name>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_read</name>
								<bitRange>[15:15]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS3</name>
						<description>Holds status flags for Channel(0-3). Each Status Flag can either be cleared by writing to the STATUS_CLEAR register or when the STATUS register is read (must be configured)

Status bits of Reg Groups should be read by CPU 
 '0' = Reg Group is Idle 
 '1' = Hardware is using specific reg group
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_write</name>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_read</name>
								<bitRange>[15:15]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS_CLEAR0</name>
						<description>Acknowledging status register for Channels(0-3). Clearing each one by setting corresponding bit</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS_CLEAR1</name>
						<description>Acknowledging status register for Channels(0-3). Clearing each one by setting corresponding bit</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS_CLEAR2</name>
						<description>Acknowledging status register for Channels(0-3). Clearing each one by setting corresponding bit</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS_CLEAR3</name>
						<description>Acknowledging status register for Channels(0-3). Clearing each one by setting corresponding bit</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_ENABLE0</name>
						<description>Configuring which of the interrupts are routed to the IRQ pin for Channels(0-3). Enabling each intterupt signal by setting corresponding bit. All of the interrupts can be enabled and disabled independent from each other.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed_0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_ENABLE1</name>
						<description>Configuring which of the interrupts are routed to the IRQ pin for Channels(0-3). Enabling each intterupt signal by setting corresponding bit. All of the interrupts can be enabled and disabled independent from each other.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed_0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_ENABLE2</name>
						<description>Configuring which of the interrupts are routed to the IRQ pin for Channels(0-3). Enabling each intterupt signal by setting corresponding bit. All of the interrupts can be enabled and disabled independent from each other.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed_0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_ENABLE3</name>
						<description>Configuring which of the interrupts are routed to the IRQ pin for Channels(0-3). Enabling each intterupt signal by setting corresponding bit. All of the interrupts can be enabled and disabled independent from each other.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed_0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CONFIG</name>
						<description>Configures Pad, 10 Bits for read pad configuration 
10 bits for write pad configuration. </description>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Write_Pad_Configuration</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>Read_Pad_Configuration</name>
								<bitRange>[19:10]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_CONFIG</name>
						<description>Configures the state (active high/low) and clearing
conditions for the IRQ pin. 
Cleared: '0' = Use STATUS_CLEAR to clear 
                  '1' = Auto Clear on Read of STATUS register
Polarity: '0' = IRQ active low
                   '1' = IRQ active high
Set all bits IRQ_CONFIG(7 downto 4) of polarity to &quot;1111&quot; for IRQ active high or
&quot;0000&quot; for IRQ active low. </description>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Clear0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>Clear1</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>Clear2</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>Clear3</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>Polarity0</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>Polarity1</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>Polarity2</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>Polarity3</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Channel_0_Registers</name>
					<addressOffset>0x0040</addressOffset>
					<register>
						<name>SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_READ_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Read</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Read</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Read</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_WRITE_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Write</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Write</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Write</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_AXI_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_AXI_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Channel_1_Registers</name>
					<addressOffset>0x00C0</addressOffset>
					<register>
						<name>SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_READ_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Read</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Read</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Read</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_WRITE_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Write</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Write</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Write</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_AXI_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_AXI_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Channel_3_Registers</name>
					<addressOffset>0x01C0</addressOffset>
					<register>
						<name>SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_READ_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Read</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Read</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Read</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_WRITE_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Write</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Write</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Write</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_AXI_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_AXI_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Channel_2_Registers</name>
					<addressOffset>0x0140</addressOffset>
					<register>
						<name>SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_READ_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Read</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Read</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Read</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_WRITE_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Write</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Write</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Write</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_AXI_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_AXI_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>DMA1</name>
			<version>1.0</version>
			<description>The Excel of Register Map can be found here. 

https://tuni.sharepoint.com/:x:/r/sites/TG-SoC-Hub/_layouts/15/Doc.aspx?sourcedoc=%7B971A5DEF-758E-4A18-8EA3-0F3F2D60F0BB%7D&amp;file=DMA_register_map.xlsx&amp;action=default&amp;mobileredirect=true&amp;cid=419a13fc-9dbd-45b9-8f31-77899c555ace

DMA Sub System Document available in below link:
https://tuni.sharepoint.com/:w:/r/sites/TG-SoC-Hub/_layouts/15/Doc.aspx?sourcedoc=%7B9E9DFD0D-B0CA-436B-ABA0-57DB3B73560E%7D&amp;file=DMA_Sub_System_Document.....docx&amp;action=default&amp;mobileredirect=true

</description>
			<baseAddress>0xFFA08000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0040</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0040</offset>
				<size>0x0080</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x00C0</offset>
				<size>0x0080</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x01C0</offset>
				<size>0x0080</size>
				<usage>registers</usage>
			</addressBlock>
			<addressBlock>
				<offset>0x0140</offset>
				<size>0x0080</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<cluster>
					<name>Status_Registers</name>
					<addressOffset>0x0000</addressOffset>
					<register>
						<name>IP_ID</name>
						<description>Constant 32'h70646d61 default value ; &quot;pdma&quot; in ascii</description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>ID</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>INFO</name>
						<description>32'h00200401 default value
Version number
Number of available channels
AXI data width</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>Version</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>No_of_Channels</name>
								<bitRange>[15:8]</bitRange>
							</field>
							<field>
								<name>AXI_Data_Width</name>
								<bitRange>[23:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS0</name>
						<description>Holds status flags for Channel(0-3). Each Status Flag can either be cleared by writing to the STATUS_CLEAR register or when the STATUS register is read (must be configured)

Status bits of Reg Groups should be read by CPU 
 '0' = Reg Group is Idle 
 '1' = Hardware is using specific reg group
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_write</name>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_read</name>
								<bitRange>[15:15]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS1</name>
						<description>Holds status flags for Channel(0-3). Each Status Flag can either be cleared by writing to the STATUS_CLEAR register or when the STATUS register is read (must be configured)

Status bits of Reg Groups should be read by CPU 
 '0' = Reg Group is Idle 
 '1' = Hardware is using specific reg group
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_write</name>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_read</name>
								<bitRange>[15:15]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS2</name>
						<description>Holds status flags for Channel(0-3). Each Status Flag can either be cleared by writing to the STATUS_CLEAR register or when the STATUS register is read (must be configured)

Status bits of Reg Groups should be read by CPU 
 '0' = Reg Group is Idle 
 '1' = Hardware is using specific reg group
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_write</name>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_read</name>
								<bitRange>[15:15]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS3</name>
						<description>Holds status flags for Channel(0-3). Each Status Flag can either be cleared by writing to the STATUS_CLEAR register or when the STATUS register is read (must be configured)

Status bits of Reg Groups should be read by CPU 
 '0' = Reg Group is Idle 
 '1' = Hardware is using specific reg group
</description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-only</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_write</name>
								<bitRange>[12:12]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>status_reg_group_0_read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>status_reg_group_1_read</name>
								<bitRange>[15:15]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS_CLEAR0</name>
						<description>Acknowledging status register for Channels(0-3). Clearing each one by setting corresponding bit</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS_CLEAR1</name>
						<description>Acknowledging status register for Channels(0-3). Clearing each one by setting corresponding bit</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS_CLEAR2</name>
						<description>Acknowledging status register for Channels(0-3). Clearing each one by setting corresponding bit</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>STATUS_CLEAR3</name>
						<description>Acknowledging status register for Channels(0-3). Clearing each one by setting corresponding bit</description>
						<addressOffset>0x0018</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_ENABLE0</name>
						<description>Configuring which of the interrupts are routed to the IRQ pin for Channels(0-3). Enabling each intterupt signal by setting corresponding bit. All of the interrupts can be enabled and disabled independent from each other.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed_0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_ENABLE1</name>
						<description>Configuring which of the interrupts are routed to the IRQ pin for Channels(0-3). Enabling each intterupt signal by setting corresponding bit. All of the interrupts can be enabled and disabled independent from each other.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed_0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_ENABLE2</name>
						<description>Configuring which of the interrupts are routed to the IRQ pin for Channels(0-3). Enabling each intterupt signal by setting corresponding bit. All of the interrupts can be enabled and disabled independent from each other.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed_0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_ENABLE3</name>
						<description>Configuring which of the interrupts are routed to the IRQ pin for Channels(0-3). Enabling each intterupt signal by setting corresponding bit. All of the interrupts can be enabled and disabled independent from each other.</description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>wr_transfer_completed_0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>rd_transfer_completed</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>rb_error</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>wb_error</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>fifo_overflow</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>fifo_underflow</name>
								<bitRange>[5:5]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>PAD_CONFIG</name>
						<description>Configures Pad, 10 Bits for read pad configuration 
10 bits for write pad configuration. </description>
						<addressOffset>0x003C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Write_Pad_Configuration</name>
								<bitRange>[9:0]</bitRange>
							</field>
							<field>
								<name>Read_Pad_Configuration</name>
								<bitRange>[19:10]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>IRQ_CONFIG</name>
						<description>Configures the state (active high/low) and clearing
conditions for the IRQ pin. 
Cleared: '0' = Use STATUS_CLEAR to clear 
                  '1' = Auto Clear on Read of STATUS register
Polarity: '0' = IRQ active low
                   '1' = IRQ active high
Set all bits IRQ_CONFIG(7 downto 4) of polarity to &quot;1111&quot; for IRQ active high or
&quot;0000&quot; for IRQ active low. </description>
						<addressOffset>0x0038</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Clear0</name>
								<bitRange>[0:0]</bitRange>
							</field>
							<field>
								<name>Clear1</name>
								<bitRange>[1:1]</bitRange>
							</field>
							<field>
								<name>Clear2</name>
								<bitRange>[2:2]</bitRange>
							</field>
							<field>
								<name>Clear3</name>
								<bitRange>[3:3]</bitRange>
							</field>
							<field>
								<name>Polarity0</name>
								<bitRange>[4:4]</bitRange>
							</field>
							<field>
								<name>Polarity1</name>
								<bitRange>[5:5]</bitRange>
							</field>
							<field>
								<name>Polarity2</name>
								<bitRange>[6:6]</bitRange>
							</field>
							<field>
								<name>Polarity3</name>
								<bitRange>[7:7]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Channel_0_Registers</name>
					<addressOffset>0x0040</addressOffset>
					<register>
						<name>SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_READ_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Read</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Read</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Read</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_WRITE_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Write</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Write</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Write</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_AXI_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_AXI_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Channel_1_Registers</name>
					<addressOffset>0x00C0</addressOffset>
					<register>
						<name>SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_READ_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Read</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Read</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Read</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_WRITE_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Write</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Write</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Write</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_AXI_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_AXI_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Channel_3_Registers</name>
					<addressOffset>0x01C0</addressOffset>
					<register>
						<name>SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_READ_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Read</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Read</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Read</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_WRITE_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Write</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Write</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Write</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_AXI_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_AXI_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
				<cluster>
					<name>Channel_2_Registers</name>
					<addressOffset>0x0140</addressOffset>
					<register>
						<name>SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0000</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0004</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0008</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x000C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0010</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_READ_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0014</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Read</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Read</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Read</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Read</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x001C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_ADDR</name>
						<description>Start address for read </description>
						<addressOffset>0x0040</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Address_0</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>AXI_WRITE_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0030</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_0_for_Write</name>
								<bitRange>[13:13]</bitRange>
							</field>
							<field>
								<name>Enable_Reg_Group_1_for_Write</name>
								<bitRange>[14:14]</bitRange>
							</field>
							<field>
								<name>Producer_Write</name>
								<bitRange>[15:15]</bitRange>
							</field>
							<field>
								<name>Consumer_Write</name>
								<bitRange>[16:16]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x002C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0028</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0024</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0020</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_LENGTH</name>
						<description>Length of read transfer in bytes</description>
						<addressOffset>0x0044</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0048</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Source_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_SET</name>
						<description>Write to set source mode register </description>
						<addressOffset>0x004C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_MODE_UNSET</name>
						<description>Write to unset source mode register </description>
						<addressOffset>0x0050</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Source_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_SOURCE_AXI_CONFIG</name>
						<description>AXI configuration signals for read
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0054</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_ARLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_ARSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_ARBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_ADDR</name>
						<description>Start address for write</description>
						<addressOffset>0x005C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Address</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_LENGTH</name>
						<description>Length of write transfer in bytes</description>
						<addressOffset>0x0060</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Length</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE</name>
						<description>ATM only used for initiating a transfer with write to least significant bit. 
LSB is unset once transfer is started, until then the address and length registers must not be modified. </description>
						<addressOffset>0x0064</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Destination_Mode</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_SET</name>
						<description>Write to set destination mode register </description>
						<addressOffset>0x0068</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Set</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_MODE_UNSET</name>
						<description>Write to unset destination mode register </description>
						<addressOffset>0x006C</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>write-only</access>
						<fields>
							<field>
								<name>Destination_Mode_Unset</name>
								<bitRange>[31:0]</bitRange>
							</field>
						</fields>
					</register>
					<register>
						<name>D_DESTINATION_AXI_CONFIG</name>
						<description>AXI configuration signals for write
Enable should be done by CPU 
 '0' = Not Enabled specific reg group 
 '1' = Enabling specific reg group. 
Producer should be updated by CPU 
'0' = Configuring Reg Group 0  
'1' = Configuring Reg Group 1 
Consumer should be read by CPU 
'0' = Hardware source output by Reg Group 0  
'1' = Hardware source output by Reg Group 1</description>
						<addressOffset>0x0070</addressOffset>
						<resetValue>0x0000</resetValue>
						<resetMask>0x0000</resetMask>
						<size>32</size>
						<access>read-write</access>
						<fields>
							<field>
								<name>Burst_Length_AWLEN</name>
								<bitRange>[7:0]</bitRange>
							</field>
							<field>
								<name>Size_of_Transfer_AWSIZE</name>
								<bitRange>[10:8]</bitRange>
							</field>
							<field>
								<name>Type_of_Burst_AWBURST</name>
								<bitRange>[12:11]</bitRange>
							</field>
						</fields>
					</register>
				</cluster>
			</registers>
		</peripheral>
		<peripheral>
			<name>ram</name>
			<version>1.0</version>
			<baseAddress>0x90080000</baseAddress>
			<registers/>
		</peripheral>
		<peripheral>
			<name>ram</name>
			<version>1.0</version>
			<baseAddress>0x90280000</baseAddress>
			<registers/>
		</peripheral>
		<peripheral>
			<name>ram</name>
			<version>1.0</version>
			<baseAddress>0x90480000</baseAddress>
			<registers/>
		</peripheral>
		<peripheral>
			<name>ram</name>
			<version>1.0</version>
			<baseAddress>0x90680000</baseAddress>
			<registers/>
		</peripheral>
	</peripherals>
</device>